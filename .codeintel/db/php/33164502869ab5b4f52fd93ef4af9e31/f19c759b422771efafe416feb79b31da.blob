<scope ilk="blob" lang="PHP" name="rw.php" src="/usr/share/php/PEAR/Task/Postinstallscript/rw.php"><import line="19" module="PEAR/Task/Postinstallscript.php" /><scope classrefs="PEAR_Task_Postinstallscript" doc="Abstracts the postinstallscript file task xml.&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.9.4&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a10" ilk="class" line="31" lineend="168" name="PEAR_Task_Postinstallscript_rw"><variable citdl="PEAR_PackageFile_v2_rw" doc="parent package file object&#xA;&#xA;@var PEAR_PackageFile_v2_rw" line="38" name="_pkg" /><scope attributes="__ctor__" doc="Enter description here...&#xA;&#xA;@param PEAR_PackageFile_v2_rw $pkg&#xA;@param PEAR_Config $config&#xA;@param PEAR_Frontend $logger&#xA;@param array $fileXml&#xA;@return PEAR_Task_Postinstallscript_rw" ilk="function" line="48" lineend="54" name="PEAR_Task_Postinstallscript_rw" returns="PEAR_Task_Postinstallscript_rw" signature="PEAR_Task_Postinstallscript_rw PEAR_Task_Postinstallscript_rw(PEAR_PackageFile_v2_rw &amp; $pkg, PEAR_Config &amp; $config, PEAR_Frontend &amp; $logger, array $fileXml)"><variable citdl="PEAR_PackageFile_v2_rw" ilk="argument" line="48" name="pkg" /><variable citdl="PEAR_Config" ilk="argument" line="48" name="config" /><variable citdl="PEAR_Frontend" ilk="argument" line="48" name="logger" /><variable citdl="array" ilk="argument" line="48" name="fileXml" /></scope><variable citdl="fileXml" line="51" name="_contents" /><variable citdl="array()" line="53" name="_params" /><scope ilk="function" line="56" lineend="59" name="validate" returns="this.validateXml()" signature="validate()" /><scope ilk="function" line="61" lineend="64" name="getName" returns="string" signature="getName()" /><scope doc="add a simple &lt;paramgroup&gt; to the post-install script&#xA;&#xA;Order is significant, so call this method in the same&#xA;sequence the users should see the paramgroups.  The $params&#xA;parameter should either be the result of a call to {@link getParam()}&#xA;or an array of calls to getParam().&#xA;&#xA;Use {@link addConditionTypeGroup()} to add a &lt;paramgroup&gt; containing&#xA;a &lt;conditiontype&gt; tag&#xA;@param string $id &lt;paramgroup&gt; id as seen by the script&#xA;@param array|false $params array of getParam() calls, or false for no params&#xA;@param string|false $instructions" ilk="function" line="80" lineend="96" name="addParamGroup" signature="addParamGroup(string $id, $params = false, $instructions = false)"><variable citdl="string" ilk="argument" line="80" name="id" /><variable default="false" ilk="argument" line="80" name="params" /><variable default="false" ilk="argument" line="80" name="instructions" /><variable citdl="array()" line="88" name="stuff" /></scope><scope doc="add a complex &lt;paramgroup&gt; to the post-install script with conditions&#xA;&#xA;This inserts a &lt;paramgroup&gt; with&#xA;&#xA;Order is significant, so call this method in the same&#xA;sequence the users should see the paramgroups.  The $params&#xA;parameter should either be the result of a call to {@link getParam()}&#xA;or an array of calls to getParam().&#xA;&#xA;Use {@link addParamGroup()} to add a simple &lt;paramgroup&gt;&#xA;&#xA;@param string $id &lt;paramgroup&gt; id as seen by the script&#xA;@param string $oldgroup &lt;paramgroup&gt; id of the section referenced by&#xA;                        &lt;conditiontype&gt;&#xA;@param string $param name of the &lt;param&gt; from the older section referenced&#xA;                     by &lt;contitiontype&gt;&#xA;@param string $value value to match of the parameter&#xA;@param string $conditiontype one of &apos;=&apos;, &apos;!=&apos;, &apos;preg_match&apos;&#xA;@param array|false $params array of getParam() calls, or false for no params&#xA;@param string|false $instructions" ilk="function" line="120" lineend="139" name="addConditionTypeGroup" signature="addConditionTypeGroup(string $id, string $oldgroup, string $param, string $value, string $conditiontype = &apos;=&apos;, $params = false, $instructions = false)"><variable citdl="string" ilk="argument" line="120" name="id" /><variable citdl="string" ilk="argument" line="120" name="oldgroup" /><variable citdl="string" ilk="argument" line="120" name="param" /><variable citdl="string" ilk="argument" line="120" name="value" /><variable citdl="string" default="&apos;=&apos;" ilk="argument" line="120" name="conditiontype" /><variable default="false" ilk="argument" line="120" name="params" /><variable default="false" ilk="argument" line="120" name="instructions" /><variable citdl="array()" line="128" name="stuff" /></scope><scope ilk="function" line="141" lineend="144" name="getXml" returns="this._params" signature="getXml()" /><scope doc="Use to set up a param tag for use in creating a paramgroup&#xA;@static" ilk="function" line="150" lineend="167" name="getParam" returns="array()" signature="getParam($name, $prompt, $type = &apos;string&apos;, $default = null)"><variable ilk="argument" line="150" name="name" /><variable ilk="argument" line="150" name="prompt" /><variable default="&apos;string&apos;" ilk="argument" line="150" name="type" /><variable default="null" ilk="argument" line="150" name="default" /></scope></scope></scope>