<?php

namespace Bingo\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class LPCandyModelsPageProxy extends \LPCandy\Models\Page implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getPath($sub = false)
    {
        $this->_load();
        return parent::getPath($sub);
    }

    public function getUrl($sub = false)
    {
        $this->_load();
        return parent::getUrl($sub);
    }

    public function getScreenshotUrl()
    {
        $this->_load();
        return parent::getScreenshotUrl();
    }

    public function getTemplate()
    {
        $this->_load();
        return parent::getTemplate();
    }

    public function getTemplatePath($sub = false)
    {
        $this->_load();
        return parent::getTemplatePath($sub);
    }

    public function getSettingsPath()
    {
        $this->_load();
        return parent::getSettingsPath();
    }

    public function getPublishPath()
    {
        $this->_load();
        return parent::getPublishPath();
    }

    public function copyFromTemplate($other)
    {
        $this->_load();
        return parent::copyFromTemplate($other);
    }

    public function save($flush = true)
    {
        $this->_load();
        return parent::save($flush);
    }

    public function delete($flush = true)
    {
        $this->_load();
        return parent::delete($flush);
    }

    public function getField($field)
    {
        $this->_load();
        return parent::getField($field);
    }

    public function setField($field, $value)
    {
        $this->_load();
        return parent::setField($field, $value);
    }

    public function &__get($key)
    {
        $this->_load();
        return parent::__get($key);
    }

    public function __set($key, $val)
    {
        $this->_load();
        return parent::__set($key, $val);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'domain', 'form', 'parent', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}